slip9 b

<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="PalindromeChecker.aspx.cs" Inherits="PalindromeChecker" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Palindrome Checker</title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
            <h1>Palindrome Checker</h1>
            <asp:Label ID="lblMessage" runat="server" Text=""></asp:Label><br /><br />
            Enter a number:
            <asp:TextBox ID="txtNumber" runat="server"></asp:TextBox><br /><br />
            <asp:Button ID="btnCheck" runat="server" Text="Check" OnClick="btnCheck_Click" />
        </div>
    </form>
</body>
</html>

aspx.cs file:

using System;

public partial class PalindromeChecker : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

    }

    protected void btnCheck_Click(object sender, EventArgs e)
    {
        string input = txtNumber.Text;

             if (IsPalindrome(input))
        {
            lblMessage.Text = "The number is a palindrome.";
        }
        else
        {
            lblMessage.Text = "The number is not a palindrome.";
        }
    }
    private bool IsPalindrome(string str)
    {
        int left = 0;
        int right = str.Length - 1;

        while (left < right)
        {
            if (str[left] != str[right])
            {
                return false;
            }
            left++;
            right--;
        }

        return true;
    }
}

slip19A .net
<%@ Control Language="C#" AutoEventWireup="true" CodeFile="LoginControl.ascx.cs" Inherits="LoginControl" %>
<div>
    <h2>Login</h2>
    <asp:Label ID="lblMessage" runat="server" Text=""></asp:Label><br />
    Username: <asp:TextBox ID="txtUsername" runat="server"></asp:TextBox><br />
    Password: <asp:TextBox ID="txtPassword" runat="server" TextMode="Password"></asp:TextBox><br />
    <asp:Button ID="btnLogin" runat="server" Text="Login" OnClick="btnLogin_Click" />
</div>

<script runat="server">
    protected void btnLogin_Click(object sender, EventArgs e)
    {
        string username = txtUsername.Text;
        string password = txtPassword.Text;
        lblMessage.Text = (username == "DYP" && password == "Pimpri") ? "Login successful. Welcome, " + username + "!" : "Invalid username or password. Please try again.";
    }
</script>

slip23B .net :

<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Default.aspx.cs" Inherits="YourNamespace._Default" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Registration Form</title>
</head>
<body>
    <form id="form1" runat="server">
        <h2>User Registration Form</h2>
        <asp:ValidationSummary ID="ValidationSummary1" runat="server" />
        <asp:Label ID="lblErrorMessage" runat="server" ForeColor="Red" Visible="false"></asp:Label><br />
        <asp:Label ID="lblSuccessMessage" runat="server" ForeColor="Green" Visible="false"></asp:Label><br />
        <div>
            <asp:Label ID="lblName" runat="server" Text="Name:"></asp:Label>
            <asp:TextBox ID="txtName" runat="server"></asp:TextBox>
            <asp:RequiredFieldValidator ID="RequiredFieldValidator1" runat="server" ControlToValidate="txtName" ErrorMessage="Name is required." ValidationGroup="Registration"></asp:RequiredFieldValidator>
            <br />
            <asp:Label ID="lblPassword" runat="server" Text="Password:"></asp:Label>
            <asp:TextBox ID="txtPassword" runat="server" TextMode="Password"></asp:TextBox>
            <asp:RequiredFieldValidator ID="RequiredFieldValidator2" runat="server" ControlToValidate="txtPassword" ErrorMessage="Password is required." ValidationGroup="Registration"></asp:RequiredFieldValidator>
            <br />
            <asp:Label ID="lblConfirmPassword" runat="server" Text="Confirm Password:"></asp:Label>
            <asp:TextBox ID="txtConfirmPassword" runat="server" TextMode="Password"></asp:TextBox>
            <asp:RequiredFieldValidator ID="RequiredFieldValidator3" runat="server" ControlToValidate="txtConfirmPassword" ErrorMessage="Please confirm password." ValidationGroup="Registration"></asp:RequiredFieldValidator>
            <asp:CompareValidator ID="CompareValidator1" runat="server" ControlToValidate="txtConfirmPassword" ControlToCompare="txtPassword" ErrorMessage="Passwords do not match." ValidationGroup="Registration"></asp:CompareValidator>
            <br />
            <asp:Label ID="lblAge" runat="server" Text="Age:"></asp:Label>
            <asp:TextBox ID="txtAge" runat="server"></asp:TextBox>
            <asp:RequiredFieldValidator ID="RequiredFieldValidator4" runat="server" ControlToValidate="txtAge" ErrorMessage="Age is required." ValidationGroup="Registration"></asp:RequiredFieldValidator>
            <asp:RangeValidator ID="RangeValidator1" runat="server" ControlToValidate="txtAge" MinimumValue="21" MaximumValue="30" Type="Integer" ErrorMessage="Age should be between 21 and 30." ValidationGroup="Registration"></asp:RangeValidator>
            <br />
            <asp:Label ID="lblEmail" runat="server" Text="Email:"></asp:Label>
            <asp:TextBox ID="txtEmail" runat="server"></asp:TextBox>
            <asp:RequiredFieldValidator ID="RequiredFieldValidator5" runat="server" ControlToValidate="txtEmail" ErrorMessage="Email is required." ValidationGroup="Registration"></asp:RequiredFieldValidator>
            <asp:RegularExpressionValidator ID="RegularExpressionValidator1" runat="server" ControlToValidate="txtEmail" ValidationExpression="\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*" ErrorMessage="Invalid email address." ValidationGroup="Registration"></asp:RegularExpressionValidator>
            <br />
            <asp:Label ID="lblUserId" runat="server" Text="User ID:"></asp:Label>
            <asp:TextBox ID="txtUserId" runat="server"></asp:TextBox>
            <asp:RequiredFieldValidator ID="RequiredFieldValidator6" runat="server" ControlToValidate="txtUserId" ErrorMessage="User ID is required." ValidationGroup="Registration"></asp:RequiredFieldValidator>
            <asp:RegularExpressionValidator ID="RegularExpressionValidator2" runat="server" ControlToValidate="txtUserId" ValidationExpression="^(?=.*[A-Z])(?=.*\d).{7,20}$" ErrorMessage="User ID should have at least one capital letter and one digit, and length should be between 7 and 20 characters." ValidationGroup="Registration"></asp:RegularExpressionValidator>
            <br />
            <asp:Button ID="btnRegister" runat="server" Text="Register" OnClick="btnRegister_Click" ValidationGroup="Registration" />
        </div>
    </form>
</body>
</html>

<% 
using System;
using System.Text.RegularExpressions;

namespace YourNamespace
{
    public partial class _Default : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
        
        }

        protected void btnRegister_Click(object sender, EventArgs e)
        {
            if (Page.IsValid)
            {
                string name = txtName.Text;
                string password = txtPassword.Text;
                int age = Convert.ToInt32(txtAge.Text);
                string email = txtEmail.Text;
                string userId = txtUserId.Text;

                // Validate age, email, and user id
                if (age < 21 || age > 30)
                {
                    lblErrorMessage.Text = "Age should be between 21 and 30.";
                    lblErrorMessage.Visible = true;
                    return;
                }

                if (!IsValidEmail(email))
                {
                    lblErrorMessage.Text = "Invalid email address.";
                    lblErrorMessage.Visible = true;
                    return;
                }

                if (!IsValidUserId(userId))
                {
                    lblErrorMessage.Text = "User ID should have at least one capital letter and one digit, and length should be between 7 and 20 characters.";
                    lblErrorMessage.Visible = true;
                    return;
                }

                lblSuccessMessage.Text = "Registration successful!";
                lblSuccessMessage.Visible = true;
            }
        }

                private bool IsValidEmail(string email)
        {
            string emailPattern = @"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$";
            return Regex.IsMatch(email, emailPattern);
        }

               private bool IsValidUserId(string userId)
        {
            string userIdPattern = @"^(?=.*[A-Z])(?=.*\d).{7,20}$";
            return Regex.IsMatch(userId, userIdPattern);
        }
    }
}
%>

Slip23B java(this is servlet file & create jsp file in web application)
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.*;


@WebServlet("/loginservlet")
public class loginservlet extends HttpServlet {
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String username = request.getParameter("username");
        String password = request.getParameter("password");

        boolean isValidUser = validateUser(username, password);

        response.setContentType("text/html");
        PrintWriter out = response.getWriter();

        out.println("<!DOCTYPE html>");
        out.println("<html>");
        out.println("<head>");
        out.println("<title>Login Result</title>");
        out.println("</head>");
        out.println("<body>");

        if (isValidUser) {
            out.println("<h2>Login Successful!</h2>");
        } else {
            out.println("<h2>Login Failed. Invalid username or password.</h2>");
        }

        out.println("</body>");
        out.println("</html>");
    }

    private boolean validateUser(String username, String password) {
        boolean isValid =! true;
        String dbUrl = "jdbc:mysql://localhost:3306/8931";
        String dbUser = "root";
        String dbPassword = "root";

        try (Connection conn = DriverManager.getConnection(dbUrl, dbUser, dbPassword)) {
            String query = "SELECT * FROM users WHERE username=? AND password=?";
            try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, username);
                pstmt.setString(2, password);
                ResultSet rs = pstmt.executeQuery();
                if (rs.next()) {
                    isValid = true;
                }
            }
        } catch (SQLException e) {
        }

        return isValid;
    }
}

